name: Build and Upload to itch.io

on:
  workflow_call:
    inputs:
      game_name:
        required: true
        type: string
      version:
          required: false
          type: string  
    secrets:
      USER:
        required: true
      API_KEY:
        required: true

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ericbartusch/godot-container-builder:latest 

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true

    - name: Format
      run: gdformat --check .
      continue-on-error: true
    
    - name: Lint
      run: gdlint .
      continue-on-error: true         

    - name: Setup Godot
      run: |
        mkdir -v -p ~/.local/share/godot/export_templates/
        mv /root/.local/share/godot/export_templates/4.3.stable ~/.local/share/godot/export_templates/4.3.stable   

    - name: Build
      run: |
        mkdir -v -p build/web
        EXPORT_DIR="$(readlink -f build)"
        godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"  

    - name: Upload to itch.io 
      run: butler push build/web ${{ secrets.USER }}/${{ inputs.GAME_NAME }}:html5
      env:
        BUTLER_API_KEY: ${{ secrets.API_KEY }}

    - name: Create Zip File 
      if: ${{ inputs.version != '' }}
      run: | 
        cd build/web zip -r ${{ inputs.game_name }}.zip ./*    
        
    - name: Create Release
      if: ${{ inputs.version != '' }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ inputs.version }}
        release_name: Release ${{ inputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: ${{ inputs.version != '' }}
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/web/${{ inputs.game_name }}.zip
        asset_name: ${{ inputs.game_name }}.zip
        asset_content_type: application/zip
          
